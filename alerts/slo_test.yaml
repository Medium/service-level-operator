rule_files:
  - slo.yaml

evaluation_interval: 1m

tests:
  # This test will test the alert triggers with 1h of errors bypassing the error budget.
  # count ratio total in 60m  = count_total * 60m                     = xxx
  # count ratio total in 60m  = 1 * 60m                               = 60
  # Error ratio total in 60m  = error_total * 60m                     = xxx
  # Error ratio total in 60m  = 0.00021* 60m                          = 0.0126
  # Error ration in 60m       = Error ratio total / Count ratio total = 0.0021
  # Error budget 2%           = (error budget * 2%)                   = xxx
  # Error budget 2%           = 0.01 * 00.02                          = 0.0002
  # Should trigger alert?     = 0.0021 > 0.0002                       = true
  - interval: 1m
    input_series:
      - series: 'service_level_sli_result_error_ratio_total{service_level="sl1",slo="slo1"}'
        values: "0+0.00021x120"
      - series: 'service_level_sli_result_count_total{service_level="sl1",slo="slo1"}'
        values: "0+1x120"
      - series: 'service_level_slo_objective_ratio{service_level="sl1",slo="slo1"}'
        values: "0.99+0x120"

    alert_rule_test:
      - eval_time: 65m
        alertname: SLOErrorRateTooFast1h
        exp_alerts:
          - exp_labels:
              severity: critical
              team: a-team
              service_level: sl1
              slo: slo1
            exp_annotations:
              summary: "The SLO error budget burn rate for 1h is greater than 2%"
              description: "The error rate for 1h in the sl1/slo1 SLO error budget is too fast, is greater than the total error budget 2%."
